"""
Django settings for juan_store project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '!w5n+=z@l!z*t^i-b9*xqshvth-ht2=&ayif!6)-t45aj$b+dg'

# SECURITY WARNING: don't run with debug turned on in production!
#configuracion escritorio
#DEBUG = True

#ALLOWED_HOSTS = []
#configuracion para Heroku
DEBUG = False

ALLOWED_HOSTS = ["*"]
# Application definition


INSTALLED_APPS = [
    'productos',
    "categorias",
    "users",
    "carts",
    "orders",
    "promo_codes",
    "charges",
    "billing_profiles",
    "shipping_addresess",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #para heroku se agrega la siguiente
    "whitenoise.middleware.WhiteNoiseMiddleware",
]

ROOT_URLCONF = 'juan_store.urls'

AUTH_USER_MODEL = "users.User"

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'juan_store.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

#para escritorio
""" DATABASES = {

    'default': {
        #conectarse con postgres
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'juan_store',
        'USER': 'postgres',
        'PASSWORD': '123456',
        'HOST': 'localhost',
        'PORT': '5432',
        #conectar con Mysql
        #'ENGINE': 'django.db.backends.mysql',
        #'NAME': 'juan_store',
        #'USER': 'root',
        #'PASSWORD': '123456',
        #'HOST': 'localhost',
        #'PORT': '',
    }
} """
#para HEROKU
import dj_database_url
from decouple import config
DATABASES = {
    "default": dj_database_url.config(
        default = config("DATABASE_URL")
    )
}



# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

#LANGUAGE_CODE = 'es'
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


#configuracion email
from decouple import config

EMAIL_HOST = 'smtp.googlemail.com' #esto es para especificar que servicio de #correo usaremos
EMAIL_PORT = 587#puerto
EMAIL_HOST_USER ='juancamilosuarezquinones@gmail.com' #correo electrónico principal(para fines de prueba usamos el personal)
EMAIL_HOST_PASSWORD = config('USER_MAIL_PASSWORD')# contraseña del gmail (.env)
EMAIL_USE_TLS = True #protocolo

#congiruacion Metodos de pago
STRIPE_PUBLIC_KEY = "pk_test_51GrZgvLGRodbDoleZbPngdLBZ00TG42Y8a6XLR4Gxks7ybBdCDbd9EpL5iGxEFlQRYszNDVqKniqH0LZogYLmg8b00Dzle6liX"
STRIPE_PRIVATE_KEY = "sk_test_51GrZgvLGRodbDolet7yleReag2Av0mB19MwOe3VAbxvedsCQH68JIoB0TjIAMyvAgO1e8amTr2HKnRxoNv5IelsG00zokbH94l"

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/


STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
STATIC_URL = '/static/'

STATICFILES_DIRS =(
    os.path.join(BASE_DIR, "static"),
)

MEDIA_URL= "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

#se agrega para subir a heroku
<<<<<<< refs/remotes/origin/master
<<<<<<< refs/remotes/origin/master
<<<<<<< refs/remotes/origin/master
#STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage" #cargar javascript y demas en el seervidor
STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'
=======
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage" #cargar javascript y demas en el seervidor
>>>>>>> configuraciones para heroku
=======
#STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage" #cargar javascript y demas en el seervidor
STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'
>>>>>>> correccion configuraciones para heroku
=======
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage" #cargar javascript y demas en el seervidor
#STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'
>>>>>>> ok
